        -:    0:Source:D:/C++/lab3/task1/Car.cpp
        -:    0:Graph:D:\C++\lab3\task1\cmake-build-debug-coverage\tests\CMakeFiles\tests.dir\__\Car.cpp.gcno
        -:    0:Data:D:\C++\lab3\task1\cmake-build-debug-coverage\tests\CMakeFiles\tests.dir\__\Car.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Car.h"
        -:    2:
        -:    3:static const int REVERSE_GEAR = -1;
        -:    4:static const int NEUTRAL_GEAR = 0;
        -:    5:static const int FIRST_GEAR = 1;
        -:    6:
        -:    7:static const int DIRECTION_BACK = -1;
        -:    8:static const int WITHOUT_DIRECTION = 0;
        -:    9:
function _ZN3CarC2Ev called 25 returned 100% blocks executed 62%
       25:   10:Car::Car() = default;
       25:   10-block  0
call    0 returned 25
call    1 returned 25
branch  2 taken 25 (fallthrough)
branch  3 taken 0 (throw)
       25:   10-block  1
call    4 returned 25
    $$$$$:   10-block  2
call    5 never executed
    $$$$$:   10-block  3
        -:   11:
function _ZNK3Car10IsTurnedOnEv called 12 returned 100% blocks executed 100%
       12:   12:bool Car::IsTurnedOn()const
        -:   13:{
       12:   14:    return m_isEngineWorking;
       12:   14-block  0
        -:   15:}
        -:   16:
function _ZNK3Car12GetDirectionEv called 1 returned 100% blocks executed 100%
        1:   17:int Car::GetDirection()const
        -:   18:{
        1:   19:    return m_direction;
        1:   19-block  0
        -:   20:}
        -:   21:
function _ZNK3Car8GetSpeedEv called 5 returned 100% blocks executed 100%
        5:   22:int Car::GetSpeed()const
        -:   23:{
        5:   24:    return m_speed;
        5:   24-block  0
        -:   25:}
        -:   26:
function _ZNK3Car7GetGearEv called 6 returned 100% blocks executed 100%
        6:   27:int Car::GetGear()const
        -:   28:{
        6:   29:    return m_gear;
        6:   29-block  0
        -:   30:}
        -:   31:
function _ZN3Car12TurnOnEngineEv called 23 returned 100% blocks executed 100%
       23:   32:bool Car::TurnOnEngine()
        -:   33:{
       23:   34:    if (!m_isEngineWorking)
       23:   34-block  0
branch  0 taken 22 (fallthrough)
branch  1 taken 1
        -:   35:    {
       22:   36:        m_isEngineWorking = true;
       22:   37:        return true;
       22:   37-block  0
        -:   38:    }
        1:   39:    return false;
        1:   39-block  0
        -:   40:}
        -:   41:
function _ZN3Car13TurnOffEngineEv called 4 returned 100% blocks executed 86%
        4:   42:bool Car::TurnOffEngine()
        -:   43:{
        4:   44:    if (!m_isEngineWorking)
        4:   44-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 4
        -:   45:    {
    #####:   46:        return true;
    %%%%%:   46-block  0
        -:   47:    }
        4:   48:    if (m_speed == 0 && m_gear == 0)
        4:   48-block  0
branch  0 taken 3 (fallthrough)
branch  1 taken 1
        3:   48-block  1
branch  2 taken 2 (fallthrough)
branch  3 taken 1
        -:   49:    {
        2:   50:        m_isEngineWorking = false;
        2:   51:        return true;
        2:   51-block  0
        -:   52:    }
        2:   53:    return false;
        2:   53-block  0
        -:   54:}
        -:   55:// сделать методом (не по значению передовать) // С заглавной буквы
function _Z16speedInGearRangeiiSt3mapIiSt5arrayIiLy2EESt4lessIiESaISt4pairIKiS1_EEE called 36 returned 100% blocks executed 100%
       36:   56:bool speedInGearRange(int speed, int gear, std::map<int, std::array<int, 2>> gearRanges)
        -:   57:{
        -:   58:    // использовать addGear а не []
       36:   59:    return (speed >= gearRanges[gear][0] && speed <= gearRanges[gear][1]);
       36:   59-block  0
call    0 returned 36
call    1 returned 36
branch  2 taken 34 (fallthrough)
branch  3 taken 2
       34:   59-block  1
call    4 returned 34
call    5 returned 34
branch  6 taken 32 (fallthrough)
branch  7 taken 2
       32:   59-block  2
        4:   59-block  3
       36:   59-block  4
        -:   60:}
        -:   61:
function _ZN3Car7SetGearEi called 24 returned 100% blocks executed 76%
       24:   62:bool Car::SetGear(int gear)
        -:   63:{
       24:   64:    if (m_gearRanges.find(gear) == m_gearRanges.end())
       24:   64-block  0
call    0 returned 24
call    1 returned 24
branch  2 taken 24 (fallthrough)
branch  3 taken 0 (throw)
       24:   64-block  1
call    4 returned 24
branch  5 taken 0 (fallthrough)
branch  6 taken 24
    $$$$$:   64-block  2
call    7 never executed
        -:   65:    {
    #####:   66:        return false;
    %%%%%:   66-block  0
        -:   67:    }
       24:   68:    if (!m_isEngineWorking && gear != NEUTRAL_GEAR)
       24:   68-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 23
        1:   68-block  1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        -:   69:    {
        1:   70:        return false;
        1:   70-block  0
        -:   71:    }
       23:   72:    if (gear >= FIRST_GEAR && m_direction == DIRECTION_BACK)
       23:   72-block  0
branch  0 taken 18 (fallthrough)
branch  1 taken 5
       18:   72-block  1
branch  2 taken 0 (fallthrough)
branch  3 taken 18
        -:   73:    {
    #####:   74:        return false;
    %%%%%:   74-block  0
        -:   75:    }
       23:   76:    if (gear == REVERSE_GEAR && m_direction != WITHOUT_DIRECTION)
       23:   76-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 22
        1:   76-block  1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
        -:   77:    {
    #####:   78:        return false;
    %%%%%:   78-block  0
        -:   79:    }
        -:   80:
       23:   81:    if (speedInGearRange(m_speed, gear, m_gearRanges))
       23:   81-block  0
call    0 returned 23
call    1 returned 23
branch  2 taken 23 (fallthrough)
branch  3 taken 0 (throw)
       23:   81-block  1
call    4 returned 23
branch  5 taken 21 (fallthrough)
branch  6 taken 2
    $$$$$:   81-block  2
call    7 never executed
        -:   82:    {
       21:   83:        m_gear = gear;
       21:   84:        return true;
       21:   84-block  0
        -:   85:    }
        -:   86:
        2:   87:    return false;
        2:   87-block  0
        -:   88:}
        -:   89:
function _ZN3Car8SetSpeedEi called 15 returned 100% blocks executed 86%
       15:   90:bool Car::SetSpeed(int speed)
        -:   91:{
       15:   92:    if (!m_isEngineWorking || (m_gear == NEUTRAL_GEAR && speed > m_speed) || speed < 0)
       15:   92-block  0
branch  0 taken 15 (fallthrough)
branch  1 taken 0
       15:   92-block  1
branch  2 taken 2 (fallthrough)
branch  3 taken 13
        2:   92-block  2
branch  4 taken 0 (fallthrough)
branch  5 taken 2
       13:   92-block  3
branch  6 taken 0 (fallthrough)
branch  7 taken 13
        -:   93:    {
        2:   94:        return false;
        2:   94-block  0
        -:   95:    }
        -:   96:
       13:   97:    if (speedInGearRange(speed, m_gear, m_gearRanges))
       13:   97-block  0
call    0 returned 13
call    1 returned 13
branch  2 taken 13 (fallthrough)
branch  3 taken 0 (throw)
       13:   97-block  1
call    4 returned 13
branch  5 taken 11 (fallthrough)
branch  6 taken 2
    $$$$$:   97-block  2
call    7 never executed
        -:   98:    {
       11:   99:        if (speed == 0)
       11:   99-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 11
        -:  100:        {
    #####:  101:            m_speed = 0;
    #####:  102:            m_direction = 0;
        -:  103:
    #####:  104:            return true;
    %%%%%:  104-block  0
        -:  105:        }
       11:  106:        if (m_speed == 0)
       11:  106-block  0
branch  0 taken 11 (fallthrough)
branch  1 taken 0
        -:  107:        {
       11:  108:            if (m_gear > 0)
       11:  108-block  0
branch  0 taken 10 (fallthrough)
branch  1 taken 1
        -:  109:            {
       10:  110:                m_direction = 1;
       10:  110-block  0
        -:  111:            }
        -:  112:            else
        -:  113:            {
        1:  114:                m_direction = -1;
        1:  114-block  0
        -:  115:            }
        -:  116:        }
       11:  117:        m_speed = speed;
        -:  118:
       11:  119:        return true;
       11:  119-block  0
        -:  120:    }
        2:  121:    return false;
        2:  121-block  0
        -:  122:}
